datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @map("_id") @default(auto()) @db.ObjectId
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?
  chats         Chat[]
  usageQuota    UsageQuota?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Account {
  id                String   @id @map("_id") @default(auto()) @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @map("_id") @default(auto()) @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String   @id @map("_id") @default(auto()) @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Chat {
  id        String    @id @map("_id") @default(auto()) @db.ObjectId
  title     String
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  chatId    String   @db.ObjectId
  role      String
  content   String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model UsageQuota {
  id             String   @id @map("_id") @default(auto()) @db.ObjectId
  userId         String   @unique @db.ObjectId
  requestsToday  Int      @default(0)
  requestsTotal  Int      @default(0)
  lastResetAt    DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])
}